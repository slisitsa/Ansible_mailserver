- name: Check SSH port and install packages needed for ansible
  hosts: target
  gather_facts: no
  become: yes
  tasks:
    #   Copyright Red Hat, Inc. All Rights Reserved.
    #
    #   Licensed under the Apache License, Version 2.0 (the "License"); you may
    #   not use this file except in compliance with the License. You may obtain
    #   a copy of the License at
    #
    #       http://www.apache.org/licenses/LICENSE-2.0
    #
    #   Unless required by applicable law or agreed to in writing, software
    #   distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
    #   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
    #   License for the specific language governing permissions and limitations
    #   under the License.
    #
    #   Author: David Moreau Simard <dms@redhat.com>

    # ansible_port can change throughout this role, keep a copy around
    - name: Set configured port fact
      set_fact:
        configured_port: "{{ ansible_port }}"

    # From localhost, check if we're able to reach {{ inventory_hostname }} on
    # default port
    - name: Check if we're using the default SSH port
      wait_for:
        port: "{{ ssh_default_port }}"
        state: "started"
        host: "{{ ansible_host }}"
        connect_timeout: "5"
        timeout: "10"
      delegate_to: "localhost"
      become: no
      ignore_errors: "yes"
      register: default_ssh

    # If reachable, continue the following tasks with this port
    - name: Set inventory ansible_port to default
      set_fact:
        ansible_port: "{{ ssh_default_port }}"
      when: default_ssh is defined
        and default_ssh.state is defined
        and default_ssh.state == "started"
      register: ssh_port_set

    # If unreachable on port 22, check if we're able to reach
    # {{ inventory_hostname }} on {{ ansible_port }} provided by the inventory
    # from localhost
    - name: Check if we're using the inventory-provided SSH port
      wait_for:
        port: "{{ ansible_port }}"
        state: "started"
        host: "{{ ansible_host }}"
        connect_timeout: "5"
        timeout: "10"
      delegate_to: "localhost"
      become: no
      ignore_errors: "yes"
      register: configured_ssh
      when: default_ssh is defined and
        default_ssh.state is undefined

    # If {{ ansible_port }} is reachable, we don't need to do anything special
    - name: SSH port is configured properly
      debug:
        msg: "SSH port is configured properly"
      when: configured_ssh is defined and
        configured_ssh.state is defined and
        configured_ssh.state == "started"
      register: ssh_port_set

    # If the SSH port is neither the default or the configured, give up.
    - name: Fail if SSH port was not auto-detected (unknown)
      fail:
        msg: "The SSH port is neither {{ ssh_default_port }} or {{ ansible_port }}."
      when: ssh_port_set is undefined

    - name: Raw installation of needed tools for ansible
      raw: "apt-get install -y python3 sudo gnupg"

    - name: Setup alternate SSH port
      lineinfile:
        dest: "/etc/ssh/sshd_config"
        regexp: "^Port"
        line: "Port {{ configured_port }}"

    - name: Setup selinux for alternate SSH port
      seport:
        ports: "{{ configured_port }}"
        proto: "tcp"
        setype: "ssh_port_t"
        state: "present"
      ignore_errors: "yes" # in case there is no selinux

    # Restart SSHD
    - name: Restart sshd
      service:
        name: sshd
        state: restarted

    # We're done, make sure ansible_port is set properly so that any tasks
    # after this use the right ansible_port.
    - name: Ensure we use the configured SSH port for the remainder of the role
      set_fact:
        ansible_port: "{{ configured_port }}"
